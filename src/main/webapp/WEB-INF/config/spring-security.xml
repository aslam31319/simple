<?xml version="1.0" encoding="UTF-8"?>

<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">

	
		<intercept-url pattern="/welcome" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/rest**" access="permitAll" />
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login login-page="/login"
			login-processing-url="/j_spring_security_check"
			default-target-url="/welcome" authentication-failure-url="/login?error=true"
			username-parameter="email" password-parameter="password" />
		<logout logout-success-url="/home" />
		<!-- enable csrf protection -->
		<csrf disabled="true" />
	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
		<authentication-provider
			user-service-ref="userDetailsServiceImpl">
			<password-encoder ref="bcrptPassEncoder"></password-encoder>
		</authentication-provider>
	</authentication-manager>
	
	
	
	
	<!-- <jdbc-user-service data-source-ref="dataSource" users-by-username-query= 
		"select email,password,from user_data_new where email=?" authorities-by-username-query= 
		"select email, role from user_data_new where email =?" /> -->
</beans:beans>
